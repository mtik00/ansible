---

- name: Install and set up zscaler
  when:
    - configure_zscaler is true
  block:
    - name: check for required variables
      ansible.builtin.assert:
        that:
          - zscaler_install_url is defined

    - name: zscaler packed dependencies
      become: true
      ansible.builtin.apt:
        name:
          - ca-certificates
          - libnss3-tools
          - libpcap-dev
          - libqt5core5a
          - libqt5dbus5
          - libqt5sql5
          - libqt5sql5-sqlite
          - libqt5webchannel5
          - libqt5webengine5
          - libqt5webenginecore5
          - libqt5webenginewidgets5
          - libqt5webkit5
          - libqt5webview5
          - libqt5widgets5
          - net-tools
          - tcpdump

    - name: copy zscaler-bundle.pem
      ansible.builtin.copy:
        src: files/zscaler-bundle.pem
        dest: "{{ ansible_user_dir }}/.ssh"
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_id }}"
        mode: 0600

    - name: copy zscaler.cert
      ansible.builtin.copy:
        src: files/zscaler.crt
        dest: "{{ ansible_user_dir }}/.ssh"
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_id }}"
        mode: 0600

    - name: create zscaler vars file
      ansible.builtin.copy:
        dest: "{{ env_files_path }}/zscaler"
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_id }}"
        mode: 0600
        content: |
          export ZSCALER_CERTIFICATE_BUNDLE="{{ ansible_user_dir }}/.ssh/zscaler-bundle.pem"
          export REQUESTS_CA_BUNDLE=$ZSCALER_CERTIFICATE_BUNDLE
          export CURL_CA_BUNDLE=$ZSCALER_CERTIFICATE_BUNDLE
          export NODE_EXTRA_CA_CERTS=$ZSCALER_CERTIFICATE_BUNDLE
          export AWS_CA_BUNDLE=$ZSCALER_CERTIFICATE_BUNDLE
          export SSL_CERT_FILE=$ZSCALER_CERTIFICATE_BUNDLE

    - name: install zscaler  # noqa command-instead-of-module
      become: true
      ansible.builtin.command: |
          wget -O /tmp/zscaler {{ zscaler_install_url }}
          bash /tmp/zscaler
          rm /tmp/zscaler
      args:
        creates: /opt/zscaler/bin/zstunnel
